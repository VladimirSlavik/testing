name: Release from new tags

on:
  push:
    tags:
      # this is a glob, not a regexp
      - 'anaconda-*'

permissions:
  contents: write

jobs:
  run:
    runs-on: ubuntu-latest

    steps:
      - name: Extract version from the tag
        id: get_version
        # If the version does not fit the regexp, we'll just fail. TODO maybe abort instead?
        run: |
          echo "Checking pushed tag ref ${{ github.ref }}"
          VER=$(echo ${{ github.ref }} | perl -ne '/^refs\/tags\/anaconda-([0-9]+(?:\.[0-9]+){1,3})-1$/ && print "$1\n";')
          if [ -z "$VER" ] ; then
            echo "Tag ref ${{ github.ref }} is not a valid release tag."
            exit 1
          else
            echo "Tag ref ${{ github.ref }} detected as release version $VER."
            echo "::set-output name=version::$VER"
          fi

      - name: Check out repo
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}

      - name: Create dummy files to release ("build")
        run: |
          mkdir -p /tmp/results/
          echo "Lorem ipsum this is ${{ steps.get_version.outputs.version }}" > /tmp/results/lorem
          cp foo /tmp/results/
          
      # TODO remove this step once the releases actually work
      - name: Upload artifacts to job
        uses: actions/upload-artifact@v2
        with:
          name: Build artifacts
          path: |
            /tmp/results/*

      - name: Create the release
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_NAME: ${{ steps.get_version.outputs.version }}
        run: |
          gh release create \
            ${{ github.ref }} \
            --draft \
            --title "anaconda-$RELEASE_NAME" \
            --notes "Anaconda release $RELEASE_NAME" \
            /tmp/results/*
